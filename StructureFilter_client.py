##################################################
# file: StructureFilter_client.py
# 
# client stubs generated by "ZSI.generate.wsdl2python.WriteServiceModule"
#     /usr/bin/wsdl2py http://structurefilter.embl.de/webservice/structureFilter.wsdl
# 
##################################################

from StructureFilter_types import *
import urlparse, types
from ZSI.TCcompound import ComplexType, Struct
from ZSI import client
from ZSI.schema import GED, GTD
import ZSI

# Locator
class StructureFilterLocator:
    StructureFilter_address = "http://luna.embl.de:8080/axis2/services/StructureFilter"
    def getStructureFilterAddress(self):
        return StructureFilterLocator.StructureFilter_address
    def getStructureFilter(self, url=None, **kw):
        return StructureFilterBindingSOAP(url or StructureFilterLocator.StructureFilter_address, **kw)

# Methods
class StructureFilterBindingSOAP:
    def __init__(self, url, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        # no ws-addressing

    # op: RunJob
    def RunJob(self, request, **kw):
        if isinstance(request, RunJobMsg) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://structureFilter.embl.de/StructureFilter/RunJob", **kw)
        # no output wsaction
        response = self.binding.Receive(RunJobResponseMsg.typecode)
        return response

    # op: GetStatus
    def GetStatus(self, request, **kw):
        if isinstance(request, GetStatusMsg) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://structureFilter.embl.de/StructureFilter/GetStatus", **kw)
        # no output wsaction
        response = self.binding.Receive(GetStatusResponseMsg.typecode)
        return response

    # op: GetResult
    def GetResult(self, request, **kw):
        if isinstance(request, GetResultMsg) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://structureFilter.embl.de/StructureFilter/GetResult", **kw)
        # no output wsaction
        response = self.binding.Receive(GetResultResponseMsg.typecode)
        return response

RunJobMsg = GED("http://structureFilter.embl.de/StructureFilter", "RunJob").pyclass

RunJobResponseMsg = GED("http://structureFilter.embl.de/StructureFilter", "RunJobResponse").pyclass

GetStatusMsg = GED("http://structureFilter.embl.de/StructureFilter", "GetStatus").pyclass

GetStatusResponseMsg = GED("http://structureFilter.embl.de/StructureFilter", "GetStatusResponse").pyclass

GetResultMsg = GED("http://structureFilter.embl.de/StructureFilter", "GetResult").pyclass

GetResultResponseMsg = GED("http://structureFilter.embl.de/StructureFilter", "GetResultResponse").pyclass
